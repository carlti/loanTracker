package com.mycompany.loantracker;
import java.io.*;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.util.Arrays;
import java.util.Comparator;
import java.util.Date;
import java.text.SimpleDateFormat;
import java.text.ParseException;
import java.util.Locale;
import javax.swing.JFrame;


/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author JJP
 */


public class TrackAPayment extends javax.swing.JFrame {
   private String filePath = "loan_data.txt";
   
   public TrackAPayment() {
        initComponents();
        loadLoanData();
    }
   
    private void loadLoanData() {
        try (BufferedReader reader = new BufferedReader(new FileReader(filePath))) {
            DefaultTableModel model = (DefaultTableModel) jtblTrackPayment.getModel();
            String line;
            while ((line = reader.readLine()) != null) {
                String[] parts = line.split(",");
                model.addRow(new Object[]{parts[0], Double.parseDouble(parts[1]), parts[2], parts[3]});
            }
        } catch (IOException e) {
            JOptionPane.showMessageDialog(this, "Error loading loan data: " + e.getMessage());
        }
    }

    private void saveLoanData() {
        try (BufferedWriter writer = new BufferedWriter(new FileWriter(filePath))) {
            DefaultTableModel model = (DefaultTableModel) jtblTrackPayment.getModel();
            for (int i = 0; i < model.getRowCount(); i++) {
                writer.write(model.getValueAt(i, 0) + "," + model.getValueAt(i, 1) + "," + model.getValueAt(i, 2) + "," + model.getValueAt(i, 3));
                writer.newLine();
            }
        } catch (IOException e) {
            JOptionPane.showMessageDialog(this, "Error saving loan data: " + e.getMessage());
        }
    }

    public void updateTable(String borrowerName, double amountRequested, String dueDate) {
        DefaultTableModel model = (DefaultTableModel) jtblTrackPayment.getModel();
        model.addRow(new Object[]{borrowerName, amountRequested, dueDate, "Unpaid"});
        saveLoanData();
    }
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jPopupMenu1 = new javax.swing.JPopupMenu();
        jPopupMenu2 = new javax.swing.JPopupMenu();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jtblTrackPayment = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jbtnName = new javax.swing.JButton();
        jbtnAmountRequested = new javax.swing.JButton();
        jbtnDate = new javax.swing.JButton();
        jbtnStatus = new javax.swing.JButton();
        jbtnBack = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(null);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 48)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Track a Payment");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(10, 40, 420, 64);

        jtblTrackPayment.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Borrower's Name", "Amount Requested", "Due", "Status", "Type of Loan"
            }
        ));
        jtblTrackPayment.getTableHeader().setReorderingAllowed(false);
        jtblTrackPayment.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtblTrackPaymentMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jtblTrackPayment);

        getContentPane().add(jScrollPane2);
        jScrollPane2.setBounds(10, 110, 800, 288);

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel2.setText("Sort By:");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(840, 70, 100, 32);

        jbtnName.setText("Name");
        jbtnName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnNameActionPerformed(evt);
            }
        });
        getContentPane().add(jbtnName);
        jbtnName.setBounds(830, 110, 110, 40);

        jbtnAmountRequested.setFont(new java.awt.Font("Segoe UI", 0, 10)); // NOI18N
        jbtnAmountRequested.setText("Amount Request");
        jbtnAmountRequested.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnAmountRequestedActionPerformed(evt);
            }
        });
        getContentPane().add(jbtnAmountRequested);
        jbtnAmountRequested.setBounds(830, 160, 110, 40);

        jbtnDate.setText("Date");
        jbtnDate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnDateActionPerformed(evt);
            }
        });
        getContentPane().add(jbtnDate);
        jbtnDate.setBounds(830, 210, 110, 40);

        jbtnStatus.setText("Status");
        jbtnStatus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnStatusActionPerformed(evt);
            }
        });
        getContentPane().add(jbtnStatus);
        jbtnStatus.setBounds(830, 260, 110, 40);

        jbtnBack.setText("Back");
        jbtnBack.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jbtnBackMouseClicked(evt);
            }
        });
        jbtnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnBackActionPerformed(evt);
            }
        });
        getContentPane().add(jbtnBack);
        jbtnBack.setBounds(10, 10, 72, 23);

        jLabel3.setIcon(new javax.swing.ImageIcon("C:\\Users\\Carl Joshua\\Downloads\\loantracker\\loantracker\\src\\main\\java\\com\\mycompany\\loantracker\\Blue and White Modern Company Meeting Zoom Virtual Background.png")); // NOI18N
        jLabel3.setText("jLabel3");
        jLabel3.setMaximumSize(new java.awt.Dimension(1920, 1080));
        jLabel3.setPreferredSize(new java.awt.Dimension(1920, 1080));
        getContentPane().add(jLabel3);
        jLabel3.setBounds(0, 0, 1280, 720);

        pack();
    }// </editor-fold>                        

    private void jbtnNameActionPerformed(java.awt.event.ActionEvent evt) {                                         
        // TODO add your handling code here:
         // Extracting the data from the table
    DefaultTableModel model = (DefaultTableModel) jtblTrackPayment.getModel();
    int rowCount = model.getRowCount();
    String[][] data = new String[rowCount][4];

    for (int i = 0; i < rowCount; i++) {
        data[i][0] = model.getValueAt(i, 0).toString(); // Borrower's Name
        data[i][1] = model.getValueAt(i, 1).toString(); // Amount Requested
        data[i][2] = model.getValueAt(i, 2).toString(); // Due Date
        data[i][3] = model.getValueAt(i, 3).toString(); // Status
    }

    // Sort the data based on Borrower's Name using merge sort
    mergeSort(data, 0, rowCount - 1);

    // Updating the table with the sorted data
    for (int i = 0; i < rowCount; i++) {
        for (int j = 0; j < 4; j++) {
            model.setValueAt(data[i][j], i, j);
        }
    }
    }                                        
    // Method to extract names from the table
private void mergeSort(String[][] arr, int l, int r) {
    if (l < r) {
        int m = (l + r) / 2;
        mergeSort(arr, l, m);
        mergeSort(arr, m + 1, r);
        merge(arr, l, m, r);
    }
}

private void merge(String[][] arr, int l, int m, int r) {
    int n1 = m - l + 1;
    int n2 = r - m;

    String[][] L = new String[n1][4];
    String[][] R = new String[n2][4];

    for (int i = 0; i < n1; ++i)
        L[i] = arr[l + i];
    for (int j = 0; j < n2; ++j)
        R[j] = arr[m + 1 + j];

    int i = 0, j = 0;
    int k = l;
    while (i < n1 && j < n2) {
        if (L[i][0].compareTo(R[j][0]) <= 0) {
            arr[k] = L[i];
            i++;
        } else {
            arr[k] = R[j];
            j++;
        }
        k++;
    }

    while (i < n1) {
        arr[k] = L[i];
        i++;
        k++;
    }

    while (j < n2) {
        arr[k] = R[j];
        j++;
        k++;
    }
}

// Method to update the table with sorted names
private void updateTable(String[] names) {
    for (int i = 0; i < names.length; i++) {
        jtblTrackPayment.setValueAt(names[i], i, 0);
    }
}
    private void jbtnAmountRequestedActionPerformed(java.awt.event.ActionEvent evt) {                                                    
        // TODO add your handling code here:
        // Extracting the data from the table
    DefaultTableModel model = (DefaultTableModel) jtblTrackPayment.getModel();
    int rowCount = model.getRowCount();
    String[][] data = new String[rowCount][4];

    for (int i = 0; i < rowCount; i++) {
        data[i][0] = model.getValueAt(i, 0).toString(); // Borrower's Name
        data[i][1] = model.getValueAt(i, 1).toString(); // Amount Requested
        data[i][2] = model.getValueAt(i, 2).toString(); // Due Date
        data[i][3] = model.getValueAt(i, 3).toString(); // Status
    }

    // Sorting the data based on Amount Requested using Insertion Sort
    for (int i = 1; i < rowCount; i++) {
        String[] key = data[i];
        int j = i - 1;

        // Compare Amount Requested
        while (j >= 0 && Double.parseDouble(data[j][1]) > Double.parseDouble(key[1])) {
            data[j + 1] = data[j];
            j = j - 1;
        }
        data[j + 1] = key;
    }

    // Updating the table with the sorted data
    for (int i = 0; i < rowCount; i++) {
        for (int j = 0; j < 4; j++) {
            model.setValueAt(data[i][j], i, j);
        }
    }
    }                                                   

    private void jbtnDateActionPerformed(java.awt.event.ActionEvent evt) {                                         
 
    // Extracting the data from the table
    DefaultTableModel model = (DefaultTableModel) jtblTrackPayment.getModel();
    int rowCount = model.getRowCount();
    Object[][] data = new Object[rowCount][4];

    for (int i = 0; i < rowCount; i++) {
        for (int j = 0; j < 4; j++) {
            data[i][j] = model.getValueAt(i, j);
        }
    }

    // Sorting the data based on the date column using Arrays.sort method
    Arrays.sort(data, new Comparator<Object[]>() {
        @Override
        public int compare(Object[] row1, Object[] row2) {
            String date1 = (String) row1[2]; // Assuming date is at index 2
            String date2 = (String) row2[2]; // Assuming date is at index 2
            SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MMM-dd", Locale.ENGLISH);
            try {
                return sdf.parse(date1).compareTo(sdf.parse(date2));
            } catch (ParseException ex) {
                ex.printStackTrace();
                return 0;
            }
        }
    });

    // Updating the table with the sorted data
    for (int i = 0; i < rowCount; i++) {
        for (int j = 0; j < 4; j++) {
            model.setValueAt(data[i][j], i, j);
        }
    }

    }                                        

    private void jbtnStatusActionPerformed(java.awt.event.ActionEvent evt) {                                           
        // Get the table model
    DefaultTableModel model = (DefaultTableModel) jtblTrackPayment.getModel();

    // Count the occurrences of each status
    int rowCount = model.getRowCount();
    int[] count = new int[2]; // 0: "Unpaid", 1: "Paid"
    for (int i = 0; i < rowCount; i++) {
        String status = (String) model.getValueAt(i, 3); // Assuming status is at index 3
        if (status.equals("Unpaid")) {
            count[0]++;
        } else if (status.equals("Paid")) {
            count[1]++;
        }
    }

    // Create a new table model with sorted rows
    Object[][] sortedRows = new Object[rowCount][4]; // Assuming 4 columns
    int unpaidIndex = 0;
    int paidIndex = count[0];
    for (int i = 0; i < rowCount; i++) {
        String status = (String) model.getValueAt(i, 3); // Assuming status is at index 3
        if (status.equals("Unpaid")) {
            for (int j = 0; j < 4; j++) {
                sortedRows[unpaidIndex][j] = model.getValueAt(i, j);
            }
            unpaidIndex++;
        } else if (status.equals("Paid")) {
            for (int j = 0; j < 4; j++) {
                sortedRows[paidIndex][j] = model.getValueAt(i, j);
            }
            paidIndex++;
        }
    }

    // Update the original table model with the sorted rows
    for (int i = 0; i < rowCount; i++) {
        for (int j = 0; j < 4; j++) {
            model.setValueAt(sortedRows[i][j], i, j);
        }
    }
    }                                          

    private void jbtnBackMouseClicked(java.awt.event.MouseEvent evt) {                                      
        // TODO add your handling code here:
        AddTrack at = new AddTrack();
        at.show();
        dispose();
    }                                     

    private void jtblTrackPaymentMouseClicked(java.awt.event.MouseEvent evt) {                                              
        // TODO add your handling code here:
        
    }                                             

    private void jbtnBackActionPerformed(java.awt.event.ActionEvent evt) {                                         
        UserInfo ui = new UserInfo();
        ui.setExtendedState(JFrame.MAXIMIZED_BOTH); // Set to full-screen mode
        ui.setVisible(true);
        ui.show();
        dispose();
    }                                        

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TrackAPayment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TrackAPayment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TrackAPayment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TrackAPayment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                TrackAPayment trackAPayment = new TrackAPayment();
            trackAPayment.setExtendedState(JFrame.MAXIMIZED_BOTH); // Maximize the window
            trackAPayment.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify                     
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JPopupMenu jPopupMenu2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton jbtnAmountRequested;
    private javax.swing.JButton jbtnBack;
    private javax.swing.JButton jbtnDate;
    private javax.swing.JButton jbtnName;
    private javax.swing.JButton jbtnStatus;
    private javax.swing.JTable jtblTrackPayment;
    // End of variables declaration                   
}
